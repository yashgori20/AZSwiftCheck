name: Cleanup ACR Images

on:
  # Run after successful deployment
  workflow_run:
    workflows: ["Deploy Swift Check AI"]
    types:
      - completed
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Optional: Run on a schedule (e.g., daily at 2 AM UTC)
  schedule:
    - cron: '0 2 * * *'

env:
  REGISTRY: swiftcheckacr.azurecr.io
  IMAGE_NAME: swiftcheck-api
  ACR_NAME: swiftcheckacr

jobs:
  cleanup:
    runs-on: ubuntu-latest
    # Only run if the deployment workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    permissions:
      id-token: write

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.SWIFTCHECKAPI_AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.SWIFTCHECKAPI_AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.SWIFTCHECKAPI_AZURE_SUBSCRIPTION_ID }}

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.SWIFTCHECKAPI_REGISTRY_USERNAME }}
        password: ${{ secrets.SWIFTCHECKAPI_REGISTRY_PASSWORD }}

    - name: Clean up old ACR images
      run: |
        echo "üßπ Starting ACR cleanup process..."
        
        # Get all tags ordered by creation time (newest first), excluding 'latest'
        tags=$(az acr repository show-tags \
          --name ${{ env.ACR_NAME }} \
          --repository ${{ env.IMAGE_NAME }} \
          --orderby time_desc \
          --output tsv \
          --query "[?name!='latest'].name")
        
        # Convert to array
        tag_array=($tags)
        tag_count=${#tag_array[@]}
        
        echo "Found $tag_count tags (excluding 'latest')"
        
        if [ $tag_count -gt 2 ]; then
          tags_to_delete=${tag_array[@]:2}
          delete_count=$((tag_count - 2))
          
          echo "Will delete $delete_count old tags"
          
          for tag in $tags_to_delete; do
            echo "Deleting tag: $tag"
            az acr repository delete \
              --name ${{ env.ACR_NAME }} \
              --image "${{ env.IMAGE_NAME }}:$tag" \
              --yes
          done
          
          echo "‚úÖ Cleanup completed - deleted $delete_count old images"
        else
          echo "Only $tag_count tags found, no cleanup needed"
        fi

    - name: Check repository size
      run: |
        echo "üìä Repository information after cleanup:"
        az acr repository show \
          --name ${{ env.ACR_NAME }} \
          --repository ${{ env.IMAGE_NAME }} \
          --output table
        
        echo "üìã Remaining tags:"
        az acr repository show-tags \
          --name ${{ env.ACR_NAME }} \
          --repository ${{ env.IMAGE_NAME }} \
          --output table

    - name: Notify cleanup complete
      run: |
        echo "üßπ ACR cleanup completed successfully!"
        echo "üì¶ Registry: ${{ env.REGISTRY }}"
        echo "üè∑Ô∏è  Repository: ${{ env.IMAGE_NAME }}"