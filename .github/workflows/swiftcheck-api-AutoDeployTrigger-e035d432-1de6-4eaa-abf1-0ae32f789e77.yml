# name: Trigger auto deployment for swiftcheck-api

# # When this action will be executed
# on:
#   # Automatically trigger it when detected changes in repo
#   push:
#     branches: 
#       [ main ]
#     paths:
#     - '**'
#     - '.github/workflows/swiftcheck-api-AutoDeployTrigger-e035d432-1de6-4eaa-abf1-0ae32f789e77.yml'

#   # Allow manual trigger 
#   workflow_dispatch:      

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     permissions: 
#       id-token: write #This is required for requesting the OIDC JWT Token
#       contents: read #Required when GH token is used to authenticate with private repo

#     steps:
#       - name: Checkout to the branch
#         uses: actions/checkout@v2

#       - name: Azure Login
#         uses: azure/login@v1
#         with:
#           client-id: ${{ secrets.SWIFTCHECKAPI_AZURE_CLIENT_ID }}
#           tenant-id: ${{ secrets.SWIFTCHECKAPI_AZURE_TENANT_ID }}
#           subscription-id: ${{ secrets.SWIFTCHECKAPI_AZURE_SUBSCRIPTION_ID }}

#       - name: Build and push container image to registry
#         uses: azure/container-apps-deploy-action@v2
#         with:
#           appSourcePath: ${{ github.workspace }}/Dockerfile.azure
#           _dockerfilePathKey_: _dockerfilePath_
#           registryUrl: swiftcheckacr.azurecr.io
#           registryUsername: ${{ secrets.SWIFTCHECKAPI_REGISTRY_USERNAME }}
#           registryPassword: ${{ secrets.SWIFTCHECKAPI_REGISTRY_PASSWORD }}
#           containerAppName: swiftcheck-api
#           resourceGroup: SwiftCheckAi
#           imageToBuild: swiftcheckacr.azurecr.io/swiftcheck-api:${{ github.sha }}
#           _buildArgumentsKey_: |
#             _buildArgumentsValues_


name: Deploy Swift Check AI

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: swiftcheckacr.azurecr.io
  IMAGE_NAME: swiftcheck-api
  CONTAINER_APP_NAME: swiftcheck-api
  RESOURCE_GROUP: SwiftCheckAi
  CONTAINER_APP_ENV: swiftcheck-env  # Specify your Azure Container App Environment if any

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.SWIFTCHECKAPI_REGISTRY_USERNAME }}
        password: ${{ secrets.SWIFTCHECKAPI_REGISTRY_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.azure
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Notify image push complete
      run: |
        echo "✅ Image pushed to ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

    - name: Azure Login (for app deployment)
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.SWIFTCHECKAPI_AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.SWIFTCHECKAPI_AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.SWIFTCHECKAPI_AZURE_SUBSCRIPTION_ID }}
    
    - name: Update Azure Container App with new image
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          --environment ${{ env.CONTAINER_APP_ENV }}
      
    - name: Notify deployment complete
      run: |
        echo "✅ Container App updated with new image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
